DATA

All peptide sequences used in this project are gathered from website listed below.

+ UNIPROT: [https://www.uniprot.org/uniprot/?query=reviewed:yes] and [https://www.uniprot.org/uniprot/?query=reviewed:no]
+ SATPDB: [http://crdd.osdd.net/raghava/satpdb/]
+ DBAASP: [https://dbaasp.org]
+ AMPEP: [https://cbbio.cis.um.edu.mo/software/AmPEP/]
+ ToxinPred: [https://webs.iiitd.edu.in/raghava/toxinpred/dataset.php]

After processing, we finally get around 65000 peptides with length no more than 50 among which 16000 are labeled with antibacterial property and 17000 are labeled with toxicity.




MODEL

Our model mainly consists of 4 parts: encoder, decoder, discriminator and classifier, combining VAE and GAN together. Considering that the property of the peptide are related to the order of amino acid, we choose Recurrent Neural Network to be the main part of encoder and decoder. As for the main part of our discriminator and classifier, we choose Convolutional Neural Networks.
In general, the encoder and decoder are used for the purpose of dimensionality reduction. Same as VAE, we use encoder to map the sequence of peptide x to z in the hidden space and decoder to map z to x. Then we use decoder to act as the generator and with the discriminator we get the GAN structure. Finally we train our classifier on the hidden space and can figure out whether a peptide generated by generator or designed by hand is toxic, antibacterial, etc.



TRAIN

We firstly train the basic VAE-GAN using the all 65000 peptides and then use labeled peptides to train classifier.



USE

If we want to design a peptide for the very start, we can use the our generator to sample z on hidden space, identify with the classifier and then decode to amino acid sequences. Or if we want to test the property of sequences designed by hand, we can use encoder to map sequence to the hidden space and then classify.
